[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "regrank"
version = "0.2.30"
authors = ["Tzu-Chi Yen <tzuchi.yen@colorado.edu>"]
license = "LGPL-3.0-or-later"
readme = "README.md"
homepage = 'https://github.com/junipertcy/regrank'
repository = 'https://github.com/junipertcy/regrank'
documentation = 'https://docs.netscied.tw/regrank/index.html'
description = "Regularized methods for efficient ranking in networks"
keywords = [
    'network-analysis',
    'convex-optimization',
    'ranking-algorithm',
    'proximal-gradient-method',
    'denoising',
]
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)',
    'Natural Language :: English',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX',
    'Operating System :: Unix',
    'Operating System :: MacOS',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3 :: Only',
    'Topic :: Scientific/Engineering',
    'Topic :: Software Development :: Libraries',
]

[tool.poetry.dependencies]
python = ">3.11.0,<3.13"
cvxpy = "^1.5.2"
scipy = ">=1.10.0,<2.0.0"
numpy = "1.26.4"
numba = "^0.60.0"
scikit-learn = "^1.5.0"
marimo = "^0.6.24"
distinctipy = ">=1.3.4,<2.0.0"
prettytable = ">=3.0.0,<4.0.0"
pooch = "^1.8.2"
matplotlib = ">=3.5.0,<4.0.0"
zstandard = "^0.22.0"
black = "^24.10.0"
ruff = "^0.8.1"
pytest = "^8.2.2"
pre-commit = "^3.7.1"

[tool.poetry.group.dev.dependencies]
sphinx_rtd_theme = "^2.0.0"
sphinx = "^7.3.7"
myst-parser = "^3.0.1"
intersphinx-registry = "^0.2406.4"
numpydoc = "^1.7.0"
pytest = "^8.3.4"
sphinx-markdown-tables = "^0.0.17"
recommonmark = "^0.7.1"
mathjax = "^0.1.2"
scalene = "^1.5.42"
mypy = "^1.10.1"
types-six = "^1.16.21"
types-docutils = "^0.21.0.20240423"
flake8-pyproject = "^1.2.3"
poetry-plugin-export = "^1.8.0"


[tool.black]
skip-string-normalization = true
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff.lint]
exclude = ["docs/extlinks_fancy.py"]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = [
    "E501", # line too long, handled by black
    "C901", # too complex
    "F401",
    "F403",
    "I001",  # isort will take care of this
]

[tool.ruff.lint.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
known-first-party = []

[tool.flake8]
max-line-length = 88
select = ["C", "E", "F", "W"]
ignore = ["E203", "E266", "E501", "W503"]
per-file-ignores = [
    "**/__init__.py:F401,F403"
]

[tool.mypy]
ignore_missing_imports = true


[tool.pytest.ini_options]
addopts = "-l"
norecursedirs = ["doc", "tools"]
junit_family = "xunit2"
filterwarnings = ["error"]

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64"]

[tool.pixi.dependencies]
python = "3.12.*"

[tool.pixi.pypi-dependencies]
regrank = { path = ".", editable = true }

[tool.pixi.tasks]
